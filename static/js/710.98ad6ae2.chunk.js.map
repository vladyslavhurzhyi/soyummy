{"version":3,"file":"static/js/710.98ad6ae2.chunk.js","mappings":"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","sources":["components/AddRecipe/ResipeDescriptionFields.jsx","components/AddRecipe/RecipeIngredientsFields.jsx","components/AddRecipe/RecipeMethodFields.jsx","components/AddRecipe/AddRecipeForm.jsx","pages/AddRecipe.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { Uploader } from 'uploader';\nimport { UploadButton } from 'react-uploader';\nimport categories from '../../data/category.json';\nimport timeList from '../../data/time.json';\n\n// console.log(categories);\n// console.log(timeList);\n\nexport const ResipeDescriptionFields = ({ data, setData }) => {\n  const [images, setImages] = useState([]);\n\n  console.log(images);\n\n  const handleFieldChange = e => {\n    const { id, value } = e.target;\n    let _formData = { ...data };\n    // _formData[id] = id === 'isPublic' ? !_formData.isPublic : value;\n    _formData[id] = value;\n    setData(_formData);\n  };\n\n  const uploader = Uploader({ apiKey: 'free' });\n  const uploaderOptions = {\n    multi: false,\n    styles: {\n      colors: {\n        primary: '#8BAA36',\n      },\n    },\n  };\n\n  const MyUploadButton = ({ setImages }) => (\n    <UploadButton\n      uploader={uploader}\n      options={uploaderOptions}\n      onComplete={setImages}\n    >\n      {({ onClick }) => (\n        <button\n          onClick={onClick}\n          className=\"border-dashed border-2 rounded-xl border-accentGray text-zinc-50 py-3 px-2 flex flex-col items-center hover:border-accentLighter  focus:border-accentLighter  hover:text-accentLighter  focus:text-accentLighter\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            className=\"fill-transparent hover:fill-accentGray focus:fill-accentGray hover:stroke-accentMain focus:stroke-accentMain stroke-accentGray w-12 h-12 stroke-1\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\"\n            />\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\"\n            />\n          </svg>\n          upload image\n        </button>\n      )}\n    </UploadButton>\n  );\n\n  const MyUploadedImages = ({ images }) =>\n    images.map(img => {\n      // Tip: save 'filePath' to your DB (not 'fileUrl').\n      const filePath = img.filePath;\n      const fileUrl = uploader.url(filePath, 'thumbnail'); // \"raw\" for un-transformed file.\n      return (\n        <p\n          key={fileUrl}\n          className=\"border-dashed border-2 rounded-xl border-accentGray text-zinc-50 py-4 px-2 flex flex-col items-center\"\n        >\n          Downloaded successfully\n          <a\n            href={fileUrl}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-accentGray text-xs\"\n          >\n            click to preview\n          </a>\n        </p>\n      );\n    });\n\n  return (\n    <div className=\"flex flex-col md:flex-row\">\n      <div className=\"w-[280px] h-[280px] mx-auto mb-8 xl:w-[360px] xl:h-[360px] md:mx-0 md:mb-o md:mr-8 bg-accentMain rounded-lg flex justify-center items-center\">\n        {images.length ? (\n          <MyUploadedImages images={images} />\n        ) : (\n          <MyUploadButton setImages={setImages} />\n        )}\n\n        {/* <p>Input for photo</p> */}\n        {/* <input\n          type=\"file\"\n          multiple\n          accept=\"image/*\"\n          onChange={e => setImage(e.target.files)}\n        /> */}\n      </div>\n      <div className=\" flex flex-col md:w-[400px] mt-2\">\n        <div className=\"relative z-0 w-full mb-6\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n            id=\"title\"\n            required\n            className=\"pt-3 pb-2 pl-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            value={data.title}\n            onChange={handleFieldChange}\n          />\n          <label\n            htmlFor=\"title\"\n            className=\"absolute duration-300 top-3 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n          >\n            Enter Recipe Title\n          </label>\n          {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">Title is required</span> */}\n        </div>\n        <div className=\"relative z-0 w-full \">\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n            id=\"description\"\n            required\n            className=\"pt-3 pb-2 pl-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            value={data.description}\n            onChange={handleFieldChange}\n          />\n          <label\n            htmlFor=\"description\"\n            className=\"absolute duration-300 top-3 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n          >\n            Enter adout recipe\n          </label>\n          {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n          Description is required\n          </span> */}\n        </div>\n        <div className=\"flex flex-row space-x-4 my-6\">\n          <div className=\"relative z-0 w-full \">\n            <select\n              name=\"category\"\n              id=\"category\"\n              required\n              value={data.category}\n              onChange={handleFieldChange}\n              className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            >\n              {categories.map(({ type }) => (\n                <option\n                  key={type}\n                  value={type}\n                  className=\"bg-lime-50 text-center\"\n                >\n                  {type}\n                </option>\n              ))}\n            </select>\n            <label\n              htmlFor=\"category\"\n              className=\"absolute duration-300 top-3 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n            >\n              Category\n            </label>\n            {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n            Category has to be selected\n          </span> */}\n          </div>\n          <div className=\"relative z-0 w-full \">\n            <select\n              name=\"time\"\n              id=\"time\"\n              required\n              value={data.time}\n              onChange={handleFieldChange}\n              className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            >\n              {timeList.map(({ time }) => (\n                <option\n                  key={time}\n                  value={time}\n                  className=\"bg-lime-50 text-center\"\n                >\n                  {time}\n                </option>\n              ))}\n            </select>\n            <label\n              htmlFor=\"time\"\n              className=\"absolute duration-300 top-3 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n            >\n              Cooking time\n            </label>\n            {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n            Time has to be selected\n          </span> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// ('use strict');\n\n// document.getElementById('button').addEventListener('click', toggleError);\n// const errMessages = document.querySelectorAll('#error');\n\n// function toggleError() {\n//   // Show error message\n//   errMessages.forEach(el => {\n//     el.classList.toggle('hidden');\n//   });\n\n//   // Highlight input and label with red\n//   const allBorders = document.querySelectorAll('.border-gray-200');\n//   const allTexts = document.querySelectorAll('.text-gray-500');\n//   allBorders.forEach(el => {\n//     el.classList.toggle('border-red-600');\n//   });\n//   allTexts.forEach(el => {\n//     el.classList.toggle('text-red-600');\n//   });\n// }\n","// import { useState } from 'react';\n\nimport { CurveBtn } from 'components/CurveBtn/CurveBtn';\nimport measureList from '../../data/measure.json';\nimport categories from '../../data/category.json';\n\nexport const ResipeIngredientsFields = ({ items, setItems }) => {\n  const handleAddClick = e => {\n    e.preventDefault();\n    const _items = [...items];\n    _items.push({\n      id: Date.now(),\n      name: '',\n      amount: '1',\n      measure: '',\n    });\n    setItems(_items);\n  };\n\n  const handleRemoveClick = id => {\n    const _items = items.filter(item => item.id !== id);\n    setItems([..._items]);\n  };\n\n  const handleFieldChange = (event, id) => {\n    const _items = [...items];\n    const index = _items.findIndex(item => item.id === id);\n    const {\n      value,\n      dataset: { name },\n    } = event.target;\n    _items[index][name] = value;\n    setItems(_items);\n  };\n  return (\n    <div className=\"my-11 md:my-24\">\n      <h2 className=\"mb-6 md:mb-9 font-main font-semibold text-secondaryText text-customBase\">\n        Ingredients\n      </h2>\n      {items.map(item => {\n        return (\n          <div key={item.id} className=\"flex mb-4 md:mb-6\">\n            <select\n              name=\"name\"\n              data-name=\"name\"\n              value={item.name}\n              onChange={e => handleFieldChange(e, item.id)}\n              className=\"pt-3 pb-2 pl-2 block w-48 md:w-96 lg:w-[600px] px-0 mr-3.5 md:mr-8 bg-accentGray rounded-lg  border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain border-transparent\"\n            >\n              {categories.map(({ type }) => (\n                <option key={type} value={type} className=\"bg-lime-50 \">\n                  {type}\n                </option>\n              ))}\n            </select>\n            <div className=\"relative z-0 w-14 mr-1 md:mr-2\">\n              <input\n                type=\"number\"\n                name=\"amount\"\n                data-name=\"amount\"\n                placeholder=\" \"\n                step=\"0.5\"\n                min=\"0.5\"\n                required\n                className=\"pt-3 pb-2 pl-5 block w-full px-0  bg-accentGray rounded-lg border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain border-transparent\"\n                value={item.amount}\n                onChange={e => handleFieldChange(e, item.id)}\n              />\n              <label\n                htmlFor=\"amount\"\n                className=\"absolute duration-300 top-2 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n              >\n                amount\n              </label>\n              {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">Title is required</span> */}\n            </div>\n            <div className=\"relative z-0 w-20 \">\n              <select\n                name=\"measure\"\n                data-name=\"measure\"\n                value={item.measure}\n                onChange={e => handleFieldChange(e, item.id)}\n                className=\"pt-3 pb-2 pl-4 block w-full px-0 mt-0 bg-accentGray rounded-lg  border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain border-transparent\"\n              >\n                {measureList.map(({ type }) => (\n                  <option key={type} value={type} className=\"bg-lime-50 \">\n                    {type}\n                  </option>\n                ))}\n              </select>\n              <label\n                htmlFor=\"measure\"\n                className=\"absolute duration-300 top-2 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n              >\n                measure\n              </label>\n              {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n      Category has to be selected\n    </span> */}\n            </div>\n            {items.length > 1 && (\n              <button\n                className=\"ml-3\"\n                type=\"button\"\n                onClick={() => handleRemoveClick(item.id)}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  className=\"w-8 h-8 stroke-[1.5px] fill-transparent hover:stroke-accentMain focus:stroke-accentMain stroke-secondaryText\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M6 18L18 6M6 6l12 12\"\n                  />\n                </svg>\n              </button>\n            )}\n          </div>\n        );\n      })}\n\n      <CurveBtn\n        text=\"add ingredient\"\n        cssClass=\"othercateg-btn\"\n        onClick={handleAddClick}\n      />\n    </div>\n  );\n};\n","export const ResipeMethodFields = ({ data, setData }) => {\n  // const [method, setMethod] = useState('');\n  // console.log(data);\n  const handleFieldChange = e => {\n    const { id, value } = e.target;\n    let _formData = { ...data };\n    _formData[id] = value;\n    setData(_formData);\n  };\n\n  return (\n    <div className=\"w-full \">\n      <label\n        htmlFor=\"method\"\n        className=\"font-main font-semibold text-secondaryText text-customBase\"\n      >\n        Recipe Preparation\n      </label>\n      <textarea\n        name=\"method\"\n        value={data.instructions}\n        id=\"instructions\"\n        required\n        placeholder=\"Enter recipe method\"\n        onChange={handleFieldChange}\n        className=\"p-3 block w-full h-40 my-[18px] md:my-[32px] md:w-2/3 lg:w-1/2 rounded-lg bg-accentGray border-0 border-b-2 appearance-none  focus:outline-none focus:ring-0 focus:border-accentMain border-transparent\"\n      ></textarea>\n\n      {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n            Category has to be selected\n          </span> */}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { ResipeDescriptionFields } from './ResipeDescriptionFields';\nimport { ResipeIngredientsFields } from './RecipeIngredientsFields';\nimport { ResipeMethodFields } from './RecipeMethodFields';\nimport { CurveBtn } from 'components/CurveBtn/CurveBtn';\nimport { FollowUs } from 'components/FollowUs/FollowUs';\n\nexport const AddRecipeForm = () => {\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    category: '',\n    time: '',\n    ingredients: [\n      {\n        id: Date.now(),\n        name: '',\n        amount: '1',\n        measure: '',\n      },\n    ],\n    isPublic: false,\n    instructions: '',\n  });\n\n  // const handleFieldChange = e => {\n  //   const { id, value } = e.target;\n  //   let _formData = { ...formData };\n  //   _formData[id] = id === 'isPublic' ? !_formData.isPublic : value;\n  //   setFormData(_formData);\n  // };\n\n  const handleFieldsChange = fields => {\n    console.log(fields);\n    let _formData = { ...formData, ...fields };\n    setFormData(_formData);\n  };\n\n  const handleIngredientsChange = ingredients => {\n    let _formData = { ...formData, ingredients };\n    setFormData(_formData);\n    console.log(formData);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // simple validation..\n    const { title, description, category, time, ingredients, instructions } =\n      formData;\n    if (\n      !title ||\n      !description ||\n      !category ||\n      !time ||\n      ingredients.length === 0 ||\n      !instructions\n    ) {\n      alert('Please, provide all required fields');\n    }\n    console.log(formData);\n    console.table(formData.ingredients);\n  };\n\n  return (\n    <div className=\"px-4 md:px-8 xl:px-24 relative\">\n      <form noValidate=\"\" onSubmit={handleSubmit}>\n        <ResipeDescriptionFields data={formData} setData={handleFieldsChange} />\n        <ResipeIngredientsFields\n          items={formData.ingredients}\n          setItems={handleIngredientsChange}\n        />\n        <ResipeMethodFields data={formData} setData={handleFieldsChange} />\n        <CurveBtn\n          type=\"submit\"\n          text=\"Publish recipe\"\n          cssClass=\"searchbl-btn\"\n          onClick={() => {\n            console.log(`Click add recipe`);\n          }}\n        />\n      </form>\n      <div className=\"lg:w-40 absolute top-0 left-[900px] xl:left-[1056px]\">\n        <h2 className=\"font-main font-semibold text-secondaryText text-customBase mb-10\">\n          Follow Us\n        </h2>\n        <FollowUs className=\"followus-addrecipe\" />\n      </div>\n    </div>\n  );\n};\n","import { AddRecipeForm } from 'components/AddRecipe/AddRecipeForm';\nimport { MainPageTitle } from 'components/MainPageTitle/MainPageTitle';\n// import { FollowUs } from 'components/FollowUs/FollowUs';\nconst AddRecipe = () => {\n  return (\n    <div>\n      <MainPageTitle\n        pageTitle=\"Add recipe\"\n        // className=\"main-title mt-[50px] mb-[72px] md:mt-[72px] md:mb-[100px] xl:mt-[100px] px-4 md:px-8 xl:px-24\"\n        className=\"main-title mb-[72px] md:mb-[100px] px-4 md:px-8 xl:px-24\"\n      />\n      <AddRecipeForm />\n    </div>\n  );\n};\n\nexport default AddRecipe;\n"],"names":["ResipeDescriptionFields","data","setData","useState","images","setImages","console","log","handleFieldChange","e","target","id","value","_formData","uploader","Uploader","apiKey","uploaderOptions","multi","styles","colors","primary","MyUploadButton","UploadButton","options","onComplete","onClick","className","xmlns","viewBox","strokeLinecap","strokeLinejoin","d","MyUploadedImages","map","img","filePath","fileUrl","url","href","rel","length","type","name","placeholder","autoComplete","required","title","onChange","htmlFor","description","category","categories","time","timeList","ResipeIngredientsFields","items","setItems","event","_items","index","findIndex","item","dataset","step","min","amount","measure","measureList","filter","handleRemoveClick","stroke","CurveBtn","text","cssClass","preventDefault","push","Date","now","ResipeMethodFields","instructions","AddRecipeForm","ingredients","isPublic","formData","setFormData","handleFieldsChange","fields","noValidate","onSubmit","alert","table","FollowUs","MainPageTitle","pageTitle"],"sourceRoot":""}
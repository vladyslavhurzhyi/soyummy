{"version":3,"file":"static/js/337.c8470aa0.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/ReorderContext.mjs","../node_modules/framer-motion/dist/es/components/Reorder/Group.mjs","../node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/transform.mjs","../node_modules/framer-motion/dist/es/value/use-transform.mjs","../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../node_modules/framer-motion/dist/es/components/Reorder/Item.mjs","../node_modules/framer-motion/dist/es/components/Reorder/index.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { createContext } from 'react';\n\nconst ReorderContext = createContext(null);\n\nexport { ReorderContext };\n","import { invariant } from '../../utils/errors.mjs';\nimport * as React from 'react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroup({ children, as = \"ul\", axis = \"y\", onReorder, values, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const order = [];\n    const isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            /**\n             * Ensure entries can't add themselves more than once\n             */\n            if (layout &&\n                order.findIndex((entry) => value === entry.value) === -1) {\n                order.push({ value, layout: layout[axis] });\n                order.sort(compareMin);\n            }\n        },\n        updateOrder: (id, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, id, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    useEffect(() => {\n        isReordering.current = false;\n    });\n    return (React.createElement(Component, { ...props, ref: externalRef, ignoreStrict: true },\n        React.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nconst Group = forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { Group, ReorderGroup };\n","import { moveItem } from '../../../utils/array.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nexport { checkReorder };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { cancelSync, sync } from '../frameloop/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => sync.update(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelSync.update(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { invariant } from '../../utils/errors.mjs';\nimport * as React from 'react';\nimport { forwardRef, useContext, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useMotionValue } from '../../value/use-motion-value.mjs';\nimport { useTransform } from '../../value/use-transform.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItem({ children, style = {}, value, as = \"li\", onDrag, layout = true, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const context = useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style.x),\n        y: useDefaultMotionValue(style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    const measuredLayout = useRef(null);\n    invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    useEffect(() => {\n        registerItem(value, measuredLayout.current);\n    }, [context]);\n    return (React.createElement(Component, { drag: axis, ...props, dragSnapToOrigin: true, style: { ...style, x: point.x, y: point.y, zIndex }, layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag && onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => {\n            measuredLayout.current = measured;\n        }, ref: externalRef, ignoreStrict: true }, children));\n}\nconst Item = forwardRef(ReorderItem);\n\nexport { Item, ReorderItem };\n","import { Group } from './Group.mjs';\nimport { Item } from './Item.mjs';\n\nconst Reorder = {\n    Group,\n    Item,\n};\n\nexport { Reorder };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxDuration ? Infinity : duration;\n}\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calculateDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    const safeCancel = () => {\n        sync.update(() => animation.cancel());\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an wildcard keyframes are hydrated by the origin.\n         */\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] === null) {\n                target[i] = i === 0 ? origin : target[i - 1];\n            }\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.10.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.10.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.10.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["ReorderContext","createContext","Group","forwardRef","externalRef","children","as","axis","onReorder","values","props","Component","useConstant","motion","order","isReordering","useRef","invariant","Boolean","context","registerItem","value","layout","findIndex","entry","push","sort","compareMin","updateOrder","id","offset","velocity","current","newOrder","index","item","nextOffset","nextItem","nextLayout","nextItemCenter","mix","min","max","moveItem","checkReorder","map","getValue","filter","indexOf","useEffect","React","ref","ignoreStrict","Provider","a","b","useMotionValue","initial","motionValue","useContext","MotionConfigContext","isStatic","useState","setLatest","on","getMixer","v","isCustomValueType","undefined","useTransform","input","inputRangeOrTransformer","outputRange","options","transformer","useImmediate","Array","isArray","argOffset","inputValue","inputRange","interpolator","interpolate","mixer","transform","useListTransform","latest","combineValues","updateValue","set","useIsomorphicLayoutEffect","scheduleUpdate","sync","subscriptions","forEach","unsubscribe","cancelSync","useCombineMotionValues","length","numValues","i","get","useDefaultMotionValue","defaultValue","isMotionValue","Reorder","Item","style","onDrag","point","x","y","zIndex","latestX","latestY","measuredLayout","drag","dragSnapToOrigin","event","gesturePoint","onLayoutMeasure","measured","transformPagePoint","p","reducedMotion","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","key","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","splice","delete","process","has","createRenderStep","keepAlive","immediate","startLoop","flushSync","processStep","stepId","processFrame","Math","requestAnimationFrame","MotionContext","PresenceContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","translateAlias","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","int","number","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","alpha","originX","progressPercentage","originY","originZ","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","addPointerEvent","addPointerInfo","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","pipe","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","getVelocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","defaultOffset","arr","remaining","offsetProgress","progress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","calcGeneratorVelocity","resolveValue","prevT","velocityPerSecond","safeMin","findSpring","envelope","derivative","bounce","mass","warning","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","result","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","types","decay","tween","calculateDuration","generator","Infinity","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","slice","split","match","floatRegex","unit","functionRegex","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","from","isZero","parseFloat","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","testValueType","dimensionValueTypes","percent","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","hasAnimated","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","notify","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","template","xScale","yScale","averageScale","output","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","SubscriptionManager","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","clear","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","to","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","object","property","getPrototypeOf","_get","Reflect","bind","receiver","base","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","baseConfig","createDomMotionConfig","toIndex","startIndex","endIndex","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixComplex","mixArray","blendValue","fromThis","mixObject","originStats","analyseComplexValue","targetStats","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","isClamp","inputLength","progressInRange","any","combineFunctions","transformers","toFromDifference","numSubscriptions","init","useLayoutEffect","frameDuration","isFloat","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","substring","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","colorToken","numberToken","colors","colorRegex","numbers","tokenised","createTransformer","convertNumbersToZero","createUnitType","endsWith"],"sourceRoot":""}
{"version":3,"file":"static/js/389.656a23d0.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxDuration ? Infinity : duration;\n}\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calculateDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    const safeCancel = () => {\n        sync.update(() => animation.cancel());\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an wildcard keyframes are hydrated by the origin.\n         */\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] === null) {\n                target[i] = i === 0 ? origin : target[i - 1];\n            }\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.10.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.10.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.10.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","key","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","indexOf","push","cancel","index","splice","delete","process","i","has","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","forEach","requestAnimationFrame","MotionContext","PresenceContext","LazyContext","strict","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","useConstant","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","int","number","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","alpha","originX","progressPercentage","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","pipe","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","getVelocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","defaultOffset","arr","remaining","offsetProgress","progress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","calculatedDuration","calcGeneratorVelocity","resolveValue","prevT","velocityPerSecond","safeMin","findSpring","envelope","derivative","bounce","mass","warning","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","result","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","types","decay","tween","calculateDuration","generator","Infinity","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","slice","split","match","floatRegex","unit","defaultValue","functionRegex","filter","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","from","isZero","parseFloat","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","testValueType","dimensionValueTypes","percent","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","motionValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","hasAnimated","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","template","xScale","yScale","averageScale","output","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","SubscriptionManager","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","clear","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","to","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","item","moveItem","toIndex","startIndex","endIndex","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","analyseComplexValue","targetStats","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","interpolator","progressInRange","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","init","useLayoutEffect","frameDuration","isFloat","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","substring","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","colorToken","numberToken","colors","colorRegex","numbers","tokenised","createTransformer","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}
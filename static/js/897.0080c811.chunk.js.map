{"version":3,"file":"static/js/897.0080c811.chunk.js","mappings":"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","sources":["components/AddRecipe/ResipeDescriptionFields.jsx","components/AddRecipe/IngredientField.jsx","components/AddRecipe/RecipeIngredientsFields.jsx","components/AddRecipe/RecipeMethodFields.jsx","components/AddRecipe/AddRecipeForm.jsx","pages/AddRecipe.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { Uploader } from 'uploader';\nimport { UploadButton } from 'react-uploader';\nimport categories from '../../data/category.json';\nimport timeList from '../../data/time.json';\n\n// console.log(categories);\n// console.log(timeList);\n\nexport const ResipeDescriptionFields = () => {\n  const [images, setImages] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [time, setTime] = useState('');\n\n  console.log(images);\n\n  const uploader = Uploader({ apiKey: 'free' });\n  const uploaderOptions = {\n    multi: false,\n    styles: {\n      colors: {\n        primary: '#8BAA36',\n      },\n    },\n  };\n\n  const MyUploadButton = ({ setImages }) => (\n    <UploadButton\n      uploader={uploader}\n      options={uploaderOptions}\n      onComplete={setImages}\n    >\n      {({ onClick }) => (\n        <button\n          onClick={onClick}\n          className=\"border-dashed border-2 rounded-xl border-accentGray text-zinc-50 py-3 px-2 flex flex-col items-center hover:border-accentLighter  focus:border-accentLighter  hover:text-accentLighter  focus:text-accentLighter\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            className=\"fill-transparent hover:fill-accentGray focus:fill-accentGray hover:stroke-accentMain focus:stroke-accentMain stroke-accentGray w-12 h-12 stroke-1\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z\"\n            />\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z\"\n            />\n          </svg>\n          upload image\n        </button>\n      )}\n    </UploadButton>\n  );\n\n  const MyUploadedImages = ({ images }) =>\n    images.map(img => {\n      // Tip: save 'filePath' to your DB (not 'fileUrl').\n      const filePath = img.filePath;\n      const fileUrl = uploader.url(filePath, 'thumbnail'); // \"raw\" for un-transformed file.\n      return (\n        <p\n          key={fileUrl}\n          className=\"border-dashed border-2 rounded-xl border-accentGray text-zinc-50 py-4 px-2 flex flex-col items-center\"\n        >\n          Downloaded successfully\n          <a\n            href={fileUrl}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"text-accentGray text-xs\"\n          >\n            click to preview\n          </a>\n        </p>\n      );\n    });\n\n  return (\n    <form id=\"form\" noValidate className=\"flex flex-col md:flex-row\">\n      <div className=\"w-[280px] h-[280px] mx-auto mb-8 xl:w-[360px] xl:h-[360px] md:mx-0 md:mb-o md:mr-8 bg-accentMain rounded-lg flex justify-center items-center\">\n        {images.length ? (\n          <MyUploadedImages images={images} />\n        ) : (\n          <MyUploadButton setImages={setImages} />\n        )}\n\n        {/* <p>Input for photo</p> */}\n        {/* <input\n          type=\"file\"\n          multiple\n          accept=\"image/*\"\n          onChange={e => setImage(e.target.files)}\n        /> */}\n      </div>\n      <div className=\" flex flex-col md:w-[400px] mt-2\">\n        <div className=\"relative z-0 w-full mb-6\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n            required\n            className=\"pt-3 pb-2 pl-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n          <label\n            htmlFor=\"title\"\n            className=\"absolute duration-300 top-3 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n          >\n            Enter Recipe Title\n          </label>\n          {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">Title is required</span> */}\n        </div>\n        <div className=\"relative z-0 w-full \">\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n            className=\"pt-3 pb-2 pl-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n          />\n          <label\n            htmlFor=\"description\"\n            className=\"absolute duration-300 top-3 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n          >\n            Enter adout recipe\n          </label>\n          {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n          Description is required\n          </span> */}\n        </div>\n        <div className=\"flex flex-row space-x-4 my-6\">\n          <div className=\"relative z-0 w-full \">\n            <select\n              name=\"category\"\n              value={category}\n              onChange={e => setCategory(e.target.value)}\n              className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            >\n              {categories.map(({ type }) => (\n                <option\n                  key={type}\n                  value={type}\n                  className=\"bg-lime-50 text-center\"\n                >\n                  {type}\n                </option>\n              ))}\n            </select>\n            <label\n              htmlFor=\"category\"\n              className=\"absolute duration-300 top-3 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n            >\n              Category\n            </label>\n            {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n            Category has to be selected\n          </span> */}\n          </div>\n          <div className=\"relative z-0 w-full \">\n            <select\n              name=\"time\"\n              value={time}\n              onChange={e => setTime(e.target.value)}\n              className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            >\n              {timeList.map(({ time }) => (\n                <option\n                  key={time}\n                  value={time}\n                  className=\"bg-lime-50 text-center\"\n                >\n                  {time}\n                </option>\n              ))}\n            </select>\n            <label\n              htmlFor=\"time\"\n              className=\"absolute duration-300 top-3 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n            >\n              Cooking time\n            </label>\n            {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n            Time has to be selected\n          </span> */}\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\n// ('use strict');\n\n// document.getElementById('button').addEventListener('click', toggleError);\n// const errMessages = document.querySelectorAll('#error');\n\n// function toggleError() {\n//   // Show error message\n//   errMessages.forEach(el => {\n//     el.classList.toggle('hidden');\n//   });\n\n//   // Highlight input and label with red\n//   const allBorders = document.querySelectorAll('.border-gray-200');\n//   const allTexts = document.querySelectorAll('.text-gray-500');\n//   allBorders.forEach(el => {\n//     el.classList.toggle('border-red-600');\n//   });\n//   allTexts.forEach(el => {\n//     el.classList.toggle('text-red-600');\n//   });\n// }\n","import { useState } from 'react';\nimport measureList from '../../data/measure.json';\n\nexport const IngredientField = () => {\n  const [ingredient, setIngredient] = useState('');\n  const [amount, setAmount] = useState('1');\n  const [measure, setMeasure] = useState('');\n\n  return (\n    <div className=\"flex mb-4 md:mb-6\">\n      <input\n        type=\"text\"\n        name=\"ingledient\"\n        placeholder=\"enter ingredient\"\n        // autoComplete=\"on\"\n        className=\"pt-3 pb-2 pl-2 block w-48 md:w-96 lg:w-[600px] px-0 mr-3.5 md:mr-8 bg-accentGray  rounded-lg border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain border-transparent\"\n        value={ingredient}\n        onChange={e => setIngredient(e.target.value)}\n      />\n      <div className=\"relative z-0 w-14 mr-1 md:mr-2\">\n        <input\n          type=\"number\"\n          name=\"amount\"\n          placeholder=\" \"\n          step=\"0.5\"\n          min=\"0.5\"\n          autoComplete=\"off\"\n          required\n          className=\"pt-3 pb-2 pl-5 block w-full px-0  bg-accentGray rounded-lg border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain border-transparent\"\n          value={amount}\n          onChange={e => setAmount(e.target.value)}\n        />\n        <label\n          htmlFor=\"amount\"\n          className=\"absolute duration-300 top-2 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n        >\n          amount\n        </label>\n        {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">Title is required</span> */}\n      </div>\n      <div className=\"relative z-0 w-20 \">\n        <select\n          name=\"measure\"\n          value={measure}\n          onChange={e => setMeasure(e.target.value)}\n          className=\"pt-3 pb-2 pl-4 block w-full px-0 mt-0 bg-accentGray rounded-lg  border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain border-transparent\"\n        >\n          {measureList.map(({ type }) => (\n            <option key={type} value={type} className=\"bg-lime-50 \">\n              {type}\n            </option>\n          ))}\n        </select>\n        <label\n          htmlFor=\"measure\"\n          className=\"absolute duration-300 top-2 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n        >\n          measure\n        </label>\n        {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n      Category has to be selected\n    </span> */}\n      </div>\n      {/* <button\n        className=\"ml-3\"\n        type=\"button\"\n        onClick={() => {\n          console.log(`delete ingredient`);\n        }}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          className=\"fill-transparent hover:fill-accentGray focus:fill-accentGray hover:stroke-accentMain focus:stroke-accentMain stroke-secondaryText w-12 h-12 stroke-1\"\n        >\n          <path d=\"M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z\"></path>\n          <line x1=\"18\" y1=\"9\" x2=\"12\" y2=\"15\"></line>\n          <line x1=\"12\" y1=\"9\" x2=\"18\" y2=\"15\"></line>\n        </svg>\n      </button>\n      <button\n        className=\"ml-3\"\n        type=\"button\"\n        onClick={() => {\n          console.log(`click remove`);\n        }}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          className=\"w-8 h-8 stroke-[1.5px] fill-transparent hover:stroke-accentMain focus:stroke-accentMain stroke-secondaryText\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      </button> */}\n    </div>\n  );\n};\n","import { IngredientField } from './IngredientField.jsx';\n\nimport { CurveBtn } from 'components/CurveBtn/CurveBtn';\n\nexport const ResipeIngredientsFields = () => {\n  return (\n    <div className=\"my-11 md:my-24\">\n      <h2 className=\"mb-6 md:mb-9 font-main font-semibold text-secondaryText text-customBase\">\n        Ingredients\n      </h2>\n      <IngredientField />\n      <CurveBtn\n        text=\"add ingredient\"\n        cssClass=\"othercateg-btn\"\n        onClick={() => {\n          console.log(`Add one more ingr`);\n        }}\n      />\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nexport const ResipeMethodFields = () => {\n  const [method, setMethod] = useState('');\n\n  return (\n    <div className=\"w-full \">\n      <label\n        htmlFor=\"method\"\n        className=\"font-main font-semibold text-secondaryText text-customBase\"\n      >\n        Recipe Preparation\n      </label>\n      <textarea\n        name=\"method\"\n        value={method}\n        placeholder=\"Enter recipe method\"\n        onChange={e => setMethod(e.target.value)}\n        className=\"p-3 block w-full h-40 my-[18px] md:my-[32px] md:w-2/3 lg:w-1/2 rounded-lg bg-accentGray border-0 border-b-2 appearance-none  focus:outline-none focus:ring-0 focus:border-accentMain border-transparent\"\n      ></textarea>\n\n      {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n            Category has to be selected\n          </span> */}\n    </div>\n  );\n};\n","import { ResipeDescriptionFields } from './ResipeDescriptionFields';\nimport { ResipeIngredientsFields } from './RecipeIngredientsFields';\nimport { ResipeMethodFields } from './RecipeMethodFields';\nimport { CurveBtn } from 'components/CurveBtn/CurveBtn';\nimport { FollowUs } from 'components/FollowUs/FollowUs';\n\nexport const AddRecipeForm = () => {\n  return (\n    <div className=\"px-4 md:px-8 xl:px-24 relative\">\n      <ResipeDescriptionFields />\n      <ResipeIngredientsFields />\n      <ResipeMethodFields />\n      <CurveBtn\n        text=\"Publish recipe\"\n        cssClass=\"addblack-btn\"\n        onClick={() => {\n          console.log(`Click add recipe`);\n        }}\n      />\n      <div className=\"lg:w-40 absolute top-0 left-[900px] xl:left-[1056px]\">\n        <h2 className=\"font-main font-semibold text-secondaryText text-customBase mb-10\">\n          Follow Us\n        </h2>\n        <FollowUs className=\"followus-addrecipe\" />\n      </div>\n    </div>\n  );\n};\n","import { AddRecipeForm } from 'components/AddRecipe/AddRecipeForm';\nimport { MainPageTitle } from 'components/MainPageTitle/MainPageTitle';\n// import { FollowUs } from 'components/FollowUs/FollowUs';\nconst AddRecipe = () => {\n  return (\n    <div>\n      <MainPageTitle\n        pageTitle=\"Add recipe\"\n        // className=\"main-title mt-[50px] mb-[72px] md:mt-[72px] md:mb-[100px] xl:mt-[100px] px-4 md:px-8 xl:px-24\"\n        className=\"main-title mb-[72px] md:mb-[100px] px-4 md:px-8 xl:px-24\"\n      />\n      <AddRecipeForm />\n    </div>\n  );\n};\n\nexport default AddRecipe;\n"],"names":["ResipeDescriptionFields","useState","images","setImages","title","setTitle","description","setDescription","category","setCategory","time","setTime","console","log","uploader","Uploader","apiKey","uploaderOptions","multi","styles","colors","primary","MyUploadButton","UploadButton","options","onComplete","onClick","className","xmlns","viewBox","strokeLinecap","strokeLinejoin","d","MyUploadedImages","map","img","filePath","fileUrl","url","href","target","rel","id","noValidate","length","type","name","placeholder","autoComplete","required","value","onChange","e","htmlFor","categories","timeList","IngredientField","ingredient","setIngredient","amount","setAmount","measure","setMeasure","step","min","measureList","ResipeIngredientsFields","CurveBtn","text","cssClass","ResipeMethodFields","method","setMethod","AddRecipeForm","FollowUs","MainPageTitle","pageTitle"],"sourceRoot":""}
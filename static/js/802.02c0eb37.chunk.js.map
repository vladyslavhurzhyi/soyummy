{"version":3,"file":"static/js/802.02c0eb37.chunk.js","mappings":"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","sources":["components/MainPageTitle/MainPageTitle.jsx","components/AddRecipe/ResipeDescriptionFields.jsx","components/AddRecipe/RecipeIngredientsFields.jsx","components/AddRecipe/RecipeMethodFields.jsx","redux/ingredients/ingredientsSelectors.js","components/AddRecipe/AddRecipeForm.jsx","components/PopularRecipes/PopularRecipes.jsx","pages/AddRecipe.jsx","redux/categories/categoriesSelectors.js","redux/recipes/recipesSelectors.js"],"sourcesContent":["import { motion } from 'framer-motion';\n\n// possible className:\n// main-title\n// main-title-accent\n// main-title-empty\n\nexport const MainPageTitle = ({ pageTitle, className }) => {\n  const isVisible = className.includes('accent') ? true : false;\n\n  return (\n    <div className=\"relative\">\n      {!isVisible && (\n        <div>\n          <motion.div\n            initial={{\n              opacity: 0,\n            }}\n            viewport={{ once: true }}\n            transition={{ duration: 1, delay: 0.5 }}\n            whileInView={{\n              opacity: 1,\n            }}\n            className=\"\n          absolute \n          bg-accentMain \n          rounded-[3px] \n          rotate-[-25deg] \n          w-2 md:w-3.5 \n          h-2 md:h-3.5 \n          top-[76px] \n          left-[104px] \n          md:top-[85px] \n          md:left-[187px] \n          xl:top-[116px] \n          xl:left-[228px] \n          size\n          \"\n          ></motion.div>\n          <motion.div\n            initial={{\n              opacity: 0,\n            }}\n            viewport={{ once: true }}\n            transition={{ duration: 1, delay: 1.5 }}\n            whileInView={{\n              opacity: 1,\n            }}\n            className=\"\n          absolute \n          bg-accentDark \n          dark:bg-whiteText\n\n          rounded-[3px] \n          rotate-[-25deg] \n          w-1.5 md:w-3 \n          h-1.5 md:h-3 \n          top-[142px] \n          left-[231px] \n          md:top-[155px] \n          md:left-[405px] \n          lg:top-[155px] \n          lg:left-[437px] \n          xl:top-[199px] \n          xl:left-[707px] \n          size animate-pulse\"\n          ></motion.div>\n          <motion.div\n            initial={{\n              opacity: 0,\n            }}\n            viewport={{ once: true }}\n            transition={{ duration: 1, delay: 2 }}\n            whileInView={{\n              opacity: 1,\n            }}\n            className=\"\n          absolute \n          bg-accentMain \n          rounded-[3px] \n          rotate-[-25deg] \n          opacity-90 \n          w-2 md:w-3.5 \n          h-2 md:h-3.5\n          top-[109px] \n          right-[0px]  \n          md:top-[98px] \n          xl:top-[129px] \n          xl:left-[1250px] \n         bg-gradient-to-r from-white to-white via-accentMain animate-gradient-x\n          xl:right-[71px] \n          size\"\n          ></motion.div>\n        </div>\n      )}\n      <h1 className={className}>{pageTitle}</h1>\n    </div>\n  );\n};\n","import timeList from '../../data/time.json';\n\nexport const ResipeDescriptionFields = ({\n  data,\n  categories,\n  updateData,\n  updateImg,\n  previewImg,\n}) => {\n  return (\n    <div className=\"flex flex-col md:flex-row\">\n      <div className=\"w-[280px] h-[280px] mx-auto mb-8 xl:w-[360px] xl:h-[360px] md:mx-0 md:mb-o md:mr-8 bg-accentMain rounded-lg flex justify-center items-center border-4 focus:outline-none focus:ring-0 focus:border-accentMain hover:border-accentMain\">\n        <label htmlFor=\"thumb\" className=\"block w-full h-full object-cover \">\n          <img\n            src={previewImg}\n            alt=\"recipe poster\"\n            className=\"block w-full h-full object-cover rounded-lg \"\n          />\n          <input\n            className=\"hidden\"\n            type=\"file\"\n            id=\"thumb\"\n            name=\"thumb\"\n            onChange={updateImg}\n            accept=\"image/png, image/jpg, image/jpeg\"\n          />\n        </label>\n      </div>\n      <div className=\" flex flex-col md:w-[400px] mt-2\">\n        <div className=\"relative z-0 w-full mb-6\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n            id=\"title\"\n            required\n            className=\"pt-3 pb-2 pl-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain hover:border-accentMain border-gray-200 dark:text-whiteText dark:border-gray-500 dark:focus:border-accentMain dark:hover:border-accentMain\"\n            value={data.title}\n            onChange={updateData}\n          />\n          <label\n            htmlFor=\"title\"\n            className=\"absolute duration-300 top-3 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm dark:text-whiteText\"\n          >\n            Enter Recipe Title\n          </label>\n        </div>\n        <div className=\"relative z-0 w-full \">\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n            id=\"description\"\n            required\n            className=\"pt-3 pb-2 pl-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain hover:border-accentMain border-gray-200  dark:text-whiteText dark:border-gray-500 dark:focus:border-accentMain dark:hover:border-accentMain\"\n            value={data.description}\n            onChange={updateData}\n          />\n          <label\n            htmlFor=\"description\"\n            className=\"absolute duration-300 top-3 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm dark:text-whiteText\"\n          >\n            Enter adout recipe\n          </label>\n        </div>\n        <div className=\"flex flex-row space-x-4 my-6\">\n          <div className=\"relative z-0 w-full \">\n            <select\n              name=\"category\"\n              id=\"category\"\n              required\n              value={data.category}\n              onChange={updateData}\n              className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain hover:border-accentMain border-gray-200  dark:text-whiteText dark:border-gray-500 dark:focus:border-accentMain dark:hover:border-accentMain\"\n            >\n              <option value=\"\" disabled hidden></option>\n              {categories.map(({ _id, category }) => (\n                <option\n                  key={_id}\n                  value={_id}\n                  className=\"bg-lime-50 text-center dark:bg-accentMain\"\n                >\n                  {category}\n                </option>\n              ))}\n            </select>\n            <label\n              htmlFor=\"category\"\n              className=\"absolute duration-300 top-3 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm dark:text-whiteText\"\n            >\n              Category\n            </label>\n          </div>\n          <div className=\"relative z-0 w-full \">\n            <select\n              name=\"time\"\n              id=\"time\"\n              required\n              value={data.time}\n              onChange={updateData}\n              className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain hover:border-accentMain border-gray-200 dark:text-whiteText dark:border-gray-500 dark:focus:border-accentMain dark:hover:border-accentMain\"\n            >\n              <option value=\"\" disabled hidden></option>\n              {timeList.map(({ time }) => (\n                <option\n                  key={time}\n                  value={time}\n                  className=\"bg-lime-50 text-center dark:bg-accentMain\"\n                >\n                  {time}\n                </option>\n              ))}\n            </select>\n            <label\n              htmlFor=\"time\"\n              className=\"absolute duration-300 top-3 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm dark:text-whiteText\"\n            >\n              Cooking time\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Logo } from '../Logo/Logo';\nimport { CurveBtn } from 'components/CurveBtn/CurveBtn';\nimport measureList from '../../data/measure.json';\n\nexport const ResipeIngredientsFields = ({\n  items,\n  updateItems,\n  removeItem,\n  ingredients,\n}) => {\n  const [matchingIngr, setMatchingIngr] = useState([]);\n  const [ingredientName, setIngredientName] = useState('');\n  const [current, setCurrent] = useState('');\n  const [currentAmount, setCurrentAmount] = useState('1');\n  const [currentMeasure, setCurrentMeasure] = useState('pcs');\n  const handleFieldChange = ({ target: { value, dataset } }) => {\n    if (dataset.name === 'amount') {\n      setCurrentAmount(value);\n    }\n    if (dataset.name === 'measure') {\n      setCurrentMeasure(value);\n    }\n  };\n\n  const onInput = ({ target: { value } }) => {\n    const currentValue = value.trim();\n    setIngredientName(currentValue);\n    const matchIngredients = ingredients.filter(it => {\n      return it.ttl?.toLowerCase().includes(currentValue.toLowerCase());\n    });\n    setMatchingIngr(matchIngredients);\n  };\n\n  const chooseItem = (ttl, _id) => {\n    setCurrent(_id);\n    setIngredientName(ttl);\n    setMatchingIngr([]);\n  };\n\n  const newIngredientField = () => {\n    if (ingredientName === ' ') {\n      return toast.error('Choose ingredient', {\n        autoClose: 3000,\n      });\n    }\n    const newIgredient = {\n      ttl: ingredientName,\n      id: current,\n      amount: currentAmount,\n      measure: currentMeasure,\n    };\n\n    updateItems([...items, newIgredient]);\n\n    setIngredientName(' ');\n    setCurrent('');\n    setCurrentAmount('1');\n    setCurrentMeasure('pcs');\n  };\n  return (\n    <div className=\"my-11 md:my-24\">\n      <h2 className=\"mb-6 md:mb-9 font-main font-semibold text-secondaryText text-customBase dark:text-whiteText\">\n        Ingredients\n      </h2>\n      <div key={current} className=\"flex mb-4 md:mb-6\">\n        <div className=\"relative z-0 w-1/2 \">\n          <input\n            type=\"text\"\n            name=\"ingredient\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n            required\n            className=\"pt-3 pb-2 pl-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain hover:border-accentMain border-gray-200  dark:text-whiteText dark:border-gray-500 dark:focus:border-accentMain dark:hover:border-accentMain\"\n            value={ingredientName}\n            onInput={onInput}\n          />\n          <ul className=\"list-none\">\n            {matchingIngr.length > 1 &&\n              matchingIngr.map(({ ttl, _id }) => (\n                <li\n                  key={_id}\n                  value={_id}\n                  onClick={() => chooseItem(ttl, _id)}\n                  className=\"bg-lime-50 dark:bg-accentMain\"\n                >\n                  {ttl}\n                </li>\n              ))}\n          </ul>\n          <label\n            htmlFor=\"ingredient\"\n            className=\"absolute duration-300 top-3 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm dark:text-whiteText\"\n          >\n            Choose ingredient\n          </label>\n        </div>\n        <div className=\"relative z-0 w-14 mr-1 md:mr-2\">\n          <input\n            type=\"number\"\n            name=\"amount\"\n            data-name=\"amount\"\n            placeholder=\" \"\n            step=\"0.5\"\n            min=\"0.5\"\n            required\n            className=\"pt-2 pb-1 md:pt-3 md:pb-2 pl-3 block w-full px-0 text-sm md:text-base bg-accentGray rounded-lg border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain hover:border-accentMain border-transparent  dark:text-whiteText dark:bg-accentDarker dark:border-2 dark:border-gray-500 dark:focus:border-accentMain dark:hover:border-accentMain\"\n            value={currentAmount}\n            onChange={e => handleFieldChange(e, current)}\n          />\n          <label\n            htmlFor=\"amount\"\n            className=\"absolute duration-300 top-2 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm dark:text-gray-500\"\n          >\n            amount\n          </label>\n        </div>\n        <div className=\"relative z-0 w-20 \">\n          <select\n            name=\"measure\"\n            data-name=\"measure\"\n            value={currentMeasure}\n            onChange={e => handleFieldChange(e, current)}\n            className=\"pt-2 pb-1 md:pt-3 md:pb-2 pl-3 block w-full px-0 mt-0 text-sm md:text-base bg-accentGray rounded-lg  border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain hover:border-accentMain border-transparent  dark:text-whiteText dark:bg-accentDarker dark:border-2 dark:border-gray-500 dark:focus:border-accentMain dark:hover:border-accentMain\"\n          >\n            {measureList.map(({ type }) => (\n              <option\n                key={type}\n                value={type}\n                className=\"bg-lime-50 dark:bg-accentMain\"\n              >\n                {type}\n              </option>\n            ))}\n          </select>\n          <label\n            htmlFor=\"measure\"\n            className=\"absolute duration-300 top-2 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm  dark:text-gray-500\"\n          >\n            measure\n          </label>\n        </div>\n      </div>\n\n      <CurveBtn\n        text=\"add ingredient\"\n        cssClass=\"othercateg-btn dark:bg-accentDarker dark:text-accentMain  dark:hover:text-accentLighter dark:hover:border-accentLighter dark:focus:ring mb-3 md:mb-5\"\n        onClick={newIngredientField}\n      />\n      <ul className=\"w-full md:w-2/3 xl:w-1/2\">\n        {items.length >= 1 &&\n          items.map(({ ttl, id, amount, measure }) => (\n            <li\n              key={id}\n              className=\"m-1 px-2 py-[2px] lg:px-4 flex items-center justify-between  bg-lime-50 rounded-lg focus:outline-none focus:ring-0 focus:border-accentMain border-transparent dark:bg-accentDarker dark:border-2 dark:border-gray-500 dark:focus:border-accentMain\"\n            >\n              <div className=\" p-[1px] md:p-2 font-normal md:font-medium  text-customXs md:text-customSm bg-[#EBF3D4] dark:bg-transparent dark:text-whiteText flex rounded-md \">\n                <p className=\"mr-4\">{ttl}:</p>\n                <p>{amount}</p>\n                <p>{measure}</p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"flex ml-1 md:ml-3 lg:ml-5\"\n                onClick={() => removeItem(id)}\n              >\n                <Logo\n                  trash=\"true\"\n                  cssClassIcon=\"iconTrash\"\n                  cssClassDiv=\"divIconTrash hover:dark:stroke-accentMain focus:dark:stroke-accentMain\"\n                />\n              </button>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","export const ResipeMethodFields = ({ data, updateData }) => {\n  return (\n    <div className=\"w-full \">\n      <label\n        htmlFor=\"method\"\n        className=\"font-main font-semibold text-secondaryText text-customBase dark:text-whiteText\"\n      >\n        Recipe Preparation\n      </label>\n      <textarea\n        name=\"method\"\n        value={data.instructions}\n        id=\"instructions\"\n        required\n        placeholder=\"Enter recipe method\"\n        onChange={updateData}\n        className=\"p-3 block w-full h-40 my-[18px] md:my-[32px] md:w-2/3 lg:w-1/2 rounded-lg bg-accentGray border-0 border-b-2 appearance-none  focus:outline-none focus:ring-0 focus:border-accentMain hover:border-accentMain border-transparent dark:text-whiteText dark:bg-accentDarker dark:border-2 dark:border-gray-500 dark:focus:border-accentMain dark:hover:border-accentMain\"\n      ></textarea>\n      <div className=\"flex relative\">\n        <input\n          type=\"checkbox\"\n          id=\"isPublic\"\n          onChange={updateData}\n          className=\"appearance-none text-accentMain cursor-pointer w-[18px] md:w-[35px] h-[18px] md:h-[35px] rounded bg-transparent border-solid border-opacity-50 checked:opacity-0 border-[#7E7E7E80] dark:border-[#FAFAFA80] transition-all duration-300 peer\"\n        />\n        <div className=\"absolute flex justify-center items-center w-[18px] md:w-[35px] h-[18px] md:h-[35px] rounded pointer-events-none bg-transparent opacity-0 border border-solid border-opacity-50 border-[#7E7E7E80] dark:border-[#FAFAFA80] transition-all duration-300 peer-checked:opacity-100\">\n          <svg\n            viewBox=\"0 0 10 10\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"w-2.5 md:w-5 h-2.5 md:h-5\"\n          >\n            <path\n              d=\"M7.77377 1.01229C8.04472 0.612637 8.58836 0.508303 8.98801 0.779256C9.38767 1.05021 9.492 1.59384 9.22105 1.9935L4.47925 8.98765C4.13243 9.4992 3.37879 9.4992 3.03197 8.98765L0.779622 5.66544C0.508669 5.26578 0.613003 4.72215 1.01266 4.45119C1.41231 4.18024 1.95595 4.28457 2.2269 4.68423L3.75561 6.93907L7.77377 1.01229Z\"\n              fill=\"#8BAA36\"\n            />\n          </svg>\n        </div>\n        <p className=\"absolute top-1 left-6 md:top-2 md:left-11 text-gray-500 text-customRecipesTime md:text-customSm dark:text-whiteText\">\n          add to the public recipe database SoYummy\n        </p>\n      </div>\n    </div>\n  );\n};\n","export const selectIngredients = state => state.ingredients.items;\nexport const selectIngrIsLoading = state => state.ingredients.isLoading;\nexport const selectIngrError = state => state.ingredients.error;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { ResipeDescriptionFields } from './ResipeDescriptionFields';\nimport { ResipeIngredientsFields } from './RecipeIngredientsFields';\nimport { ResipeMethodFields } from './RecipeMethodFields';\nimport { CurveBtn } from 'components/CurveBtn/CurveBtn';\nimport { FollowUs } from 'components/FollowUs/FollowUs';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { addRecipe } from 'redux/recipes/recipesOperations';\nimport { getIngredients } from 'redux/ingredients/ingredientsOperations';\nimport { selectIngredients } from 'redux/ingredients/ingredientsSelectors';\nimport { getCategories } from 'redux/categories/categoriesOperations';\nimport { selectCategories } from 'redux/categories/categoriesSelectors';\n\nconst IMG_PREVIEW = 'https://placehold.co/357x344?text=Upload+image';\n\nconst initialRecipe = {\n  title: '',\n  description: '',\n  category: '',\n  time: '',\n  ingredients: [],\n  isPublic: false,\n  instructions: '',\n};\nexport const AddRecipeForm = () => {\n  const ingredientsList = useSelector(selectIngredients);\n  const categoriesList = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(getIngredients());\n    dispatch(getCategories());\n  }, [dispatch]);\n\n  const [preview, setPreview] = useState(IMG_PREVIEW);\n  const [recipe, setRecipe] = useState({ ...initialRecipe });\n\n  const handleFileChange = e => {\n    const [_file] = e.target.files;\n    setPreview(_file ? URL.createObjectURL(_file) : IMG_PREVIEW);\n  };\n\n  const handleFieldChange = e => {\n    const { id, value } = e.target;\n    let _recipe = { ...recipe };\n    _recipe[id] = id === 'isPublic' ? !_recipe.isPublic : value;\n    setRecipe(_recipe);\n  };\n\n  const handleIngredientsChange = ingredients => {\n    setRecipe({ ...recipe, ingredients });\n  };\n\n  const handleRemoveIngredient = id => {\n    const _ingredients = recipe.ingredients.filter(item => item.id !== id);\n    handleIngredientsChange(_ingredients);\n  };\n\n  const sendForm = async (form, formData) => {\n    dispatch(addRecipe(formData));\n    navigate(`/my`);\n    resetForm(form);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    const [file] = e.target.thumb.files;\n    if (!file) {\n      return toast.error('Select a recipe image!', {\n        autoClose: 3000,\n      });\n    }\n    formData.append('thumb', file);\n    const formattedRecipe = {\n      ...recipe,\n      ingredients: recipe.ingredients.map(({ id, amount, measure }) => ({\n        id,\n        amount,\n        measure,\n      })),\n    };\n    formData.append('jsonData', JSON.stringify(formattedRecipe));\n    sendForm(e.target, formData);\n  };\n\n  const resetForm = form => {\n    form.reset();\n    setRecipe({\n      ...initialRecipe,\n      ingredients: [],\n    });\n    setPreview(IMG_PREVIEW);\n  };\n  return (\n    <>\n      <div className=\"relative\">\n        <form noValidate=\"\" onSubmit={handleSubmit}>\n          <ResipeDescriptionFields\n            data={recipe}\n            categories={categoriesList}\n            updateData={handleFieldChange}\n            updateImg={handleFileChange}\n            previewImg={preview}\n          />\n          <ResipeIngredientsFields\n            ingredients={ingredientsList}\n            items={recipe.ingredients}\n            updateItems={handleIngredientsChange}\n            removeItem={handleRemoveIngredient}\n          />\n          <ResipeMethodFields data={recipe} updateData={handleFieldChange} />\n          <CurveBtn\n            type=\"submit\"\n            text=\"Publish recipe\"\n            cssClass=\"searchbl-btn mt-6 mb-16 md:mb-24 lg:mb-0 dark:bg-accentMain dark:text-accentDarker  dark:hover:bg-accentLighter dark:focus:bg-accentLighter\"\n          />\n        </form>\n        <div className=\"hidden lg:block w-40 absolute top-0 left-[900px] xl:left-[1056px]\">\n          <h2 className=\"font-main font-semibold text-secondaryText text-customBase mb-10 dark:text-whiteText\">\n            Follow Us\n          </h2>\n          <FollowUs className=\"followus-addrecipe\" />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nexport const PopularRecipes = ({ data }) => {\n  return (\n    <div className=\"relative md:w-full lg:w-80 lg:absolute lg:top-[500px] lg:left-[900px] xl:left-[1056px]\">\n      <h2 className=\"mb-2 font-main font-semibold text-secondaryText text-customBase dark:text-whiteText\">\n        Popular recipe\n      </h2>\n      <ul className=\"flex flex-col md:flex-row md:flex-wrap lg:flex-col\">\n        {data.map(({ _id, title, description, thumb }) => (\n          <li\n            key={_id}\n            className=\"flex md:w-1/2 lg:w-full border-b-2 border-gray-300 pb-3.5 pt-6 pr-2 dark:border-gray-500 hover:border-accentMain focus:border-accentMain dark:hover:border-accentMain dark:focus:border-accentMain\"\n          >\n            <Link to={`/recipes/${_id}`} className=\"flex\">\n              <img\n                className=\"w-[104px] h-[85px] rounded-md mr-3\"\n                src={thumb}\n                alt={title}\n              />\n              <div className=\"flex flex-col\">\n                <p className=\"text-customSm text-secondaryText font-medium dark:text-whiteText\">\n                  {title}\n                </p>\n                <p className=\"text-xs text-gray-500 font-normal dark:text-gray-400\">\n                  {description}\n                </p>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AddRecipeForm } from 'components/AddRecipe/AddRecipeForm';\nimport { MainPageTitle } from 'components/MainPageTitle/MainPageTitle';\nimport { PopularRecipes } from 'components/PopularRecipes/PopularRecipes';\nimport { fetchPopular } from 'redux/recipes/recipesOperations';\nimport { selectRecipes } from 'redux/recipes/recipesSelectors';\nimport { Helmet } from 'react-helmet-async';\nimport { scrollToTop } from 'utils/scrollToTop';\n\nconst AddRecipe = () => {\n  const popular = useSelector(selectRecipes);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPopular());\n    scrollToTop();\n  }, [dispatch]);\n\n  return (\n    <div className=\"container  relative z-10\">\n      <Helmet>\n        <title>Add new recipe</title>\n      </Helmet>\n      <MainPageTitle\n        pageTitle=\"Add recipe\"\n        className=\"main-title mb-[72px] md:mb-[100px]\"\n      />\n      <AddRecipeForm />\n      {popular.length > 0 ? <PopularRecipes data={popular} /> : <></>}\n    </div>\n  );\n};\n\nexport default AddRecipe;\n","export const selectCategories = state => state.categories.list;\nexport const selectCurrentCategory = state => state.categories.currentCategory;\nexport const selectIngrIsLoading = state => state.categories.isLoading;\nexport const selectIngrError = state => state.categories.error;\n","export const selectRecipes = state => state.recipes.items;\nexport const selectIsLoading = state => state.recipes.isLoading;\nexport const selectError = state => state.recipes.error;\nexport const selectRecipeById = state => state.recipes.recipeById;\nexport const selectNewRecipe = state => state.recipes.newRecipe;\n"],"names":["MainPageTitle","pageTitle","className","isVisible","includes","initial","opacity","viewport","once","transition","duration","delay","whileInView","ResipeDescriptionFields","data","categories","updateData","updateImg","previewImg","htmlFor","src","alt","type","id","name","onChange","accept","placeholder","autoComplete","required","value","title","description","category","disabled","hidden","map","_id","time","timeList","ResipeIngredientsFields","items","updateItems","removeItem","ingredients","useState","matchingIngr","setMatchingIngr","ingredientName","setIngredientName","current","setCurrent","currentAmount","setCurrentAmount","currentMeasure","setCurrentMeasure","handleFieldChange","target","dataset","onInput","currentValue","trim","matchIngredients","filter","it","ttl","toLowerCase","length","onClick","chooseItem","step","min","e","measureList","CurveBtn","text","cssClass","toast","autoClose","newIgredient","amount","measure","Logo","trash","cssClassIcon","cssClassDiv","ResipeMethodFields","instructions","viewBox","fill","xmlns","d","selectIngredients","state","IMG_PREVIEW","initialRecipe","isPublic","AddRecipeForm","ingredientsList","useSelector","categoriesList","selectCategories","dispatch","useDispatch","navigate","useNavigate","useEffect","getIngredients","getCategories","preview","setPreview","recipe","setRecipe","_recipe","handleIngredientsChange","sendForm","form","formData","addRecipe","resetForm","reset","noValidate","onSubmit","preventDefault","FormData","file","thumb","files","append","formattedRecipe","JSON","stringify","_file","URL","createObjectURL","_ingredients","item","FollowUs","PopularRecipes","to","popular","selectRecipes","fetchPopular","scrollToTop","list","selectCurrentCategory","currentCategory","recipes","selectIsLoading","isLoading","selectError","error","selectRecipeById","recipeById"],"sourceRoot":""}
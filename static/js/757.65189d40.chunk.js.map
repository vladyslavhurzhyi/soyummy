{"version":3,"file":"static/js/757.65189d40.chunk.js","mappings":"o6BAIAA,QAAQC,IAAIC,GACZF,QAAQC,IAAIE,GAEL,IAAMC,EAA0B,WACrC,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwBN,EAAAA,EAAAA,UAAS,IAAjC,eAAOO,EAAP,KAAaC,EAAb,KAEA,OAEE,kBAAMC,GAAG,OAAOC,YAAU,EAACC,UAAU,4BAArC,WACE,gBAAKA,UAAU,+IAAf,UACE,8CAEF,iBAAKA,UAAU,mCAAf,WACE,iBAAKA,UAAU,2BAAf,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,YAAY,IACZC,aAAa,MACbC,UAAQ,EACRL,UAAU,mKACVM,MAAOhB,EACPiB,SAAU,SAAAC,GAAC,OAAIjB,EAASiB,EAAEC,OAAOH,MAAtB,KAEb,kBACEI,QAAQ,QACRV,UAAU,+GAFZ,oCAQF,iBAAKA,UAAU,uBAAf,WACE,kBACEC,KAAK,OACLC,KAAK,cACLC,YAAY,IACZC,aAAa,MACbJ,UAAU,mKACVM,MAAOd,EACPe,SAAU,SAAAC,GAAC,OAAIf,EAAee,EAAEC,OAAOH,MAA5B,KAEb,kBACEI,QAAQ,cACRV,UAAU,+GAFZ,oCAUF,iBAAKA,UAAU,+BAAf,WACE,iBAAKA,UAAU,uBAAf,WACE,mBACEE,KAAK,WACLI,MAAOZ,EACPa,SAAU,SAAAC,GAAC,OAAIb,EAAYa,EAAEC,OAAOH,MAAzB,EACXN,UAAU,kKAJZ,SAMGd,EAAAA,KAAe,gBAAGe,EAAH,EAAGA,KAAH,OACd,mBAEEK,MAAOL,EACPD,UAAU,yBAHZ,SAKGC,GAJIA,EAFO,OAUlB,kBACES,QAAQ,WACRV,UAAU,gHAFZ,0BAUF,iBAAKA,UAAU,uBAAf,WACE,mBACEE,KAAK,OACLI,MAAOV,EACPW,SAAU,SAAAC,GAAC,OAAIX,EAAQW,EAAEC,OAAOH,MAArB,EACXN,UAAU,kKAJZ,SAMGb,EAAAA,KAAa,gBAAGS,EAAH,EAAGA,KAAH,OACZ,mBAEEU,MAAOV,EACPI,UAAU,yBAHZ,SAKGJ,GAJIA,EAFK,OAUhB,kBACEc,QAAQ,OACRV,UAAU,gHAFZ,qCAeX,ECvHYW,EAA0B,WACrC,OACE,gBAAKX,UAAU,kEAAf,wBAIH,ECJYY,EAAqB,WAChC,OAA4BvB,EAAAA,EAAAA,UAAS,IAArC,eAAOwB,EAAP,KAAeC,EAAf,KAEA,OACE,iBAAKd,UAAU,UAAf,WACE,kBACEU,QAAQ,SACRV,UAAU,6DAFZ,iCAMA,qBACEE,KAAK,SACLI,MAAOO,EACPV,YAAY,sBACZI,SAAU,SAAAC,GAAC,OAAIM,EAAUN,EAAEC,OAAOH,MAAvB,EACXN,UAAU,8MAQjB,E,UCrBYe,EAAgB,WAC3B,OACE,iBAAKf,UAAU,wBAAf,WACE,SAACZ,EAAD,KACA,SAACuB,EAAD,KACA,SAACC,EAAD,KACA,SAACI,EAAA,EAAD,CACEC,KAAK,MACLC,SAAS,eACTC,QAAS,WACPnC,QAAQC,IAAR,mBACD,MAIR,E,SCJD,EAbkB,WAChB,OACE,iCACE,SAACmC,EAAAA,cAAD,CACEC,UAAU,aACVrB,UAAU,mGAEZ,SAACe,EAAD,MAIL,C","sources":["components/AddRecipe/ResipeDescriptionFields.jsx","components/AddRecipe/RecipeIngredientsFields.jsx","components/AddRecipe/RecipeMethodFields.jsx","components/AddRecipe/AddRecipeForm.jsx","pages/AddRecipe.jsx"],"sourcesContent":["import { useState } from 'react';\nimport categories from '../../data/category.json';\nimport timeList from '../../data/time.json';\n\nconsole.log(categories);\nconsole.log(timeList);\n\nexport const ResipeDescriptionFields = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [time, setTime] = useState('');\n\n  return (\n    // <div className=\"w-full \">\n    <form id=\"form\" noValidate className=\"flex flex-col md:flex-row\">\n      <div className=\"w-[280px] h-[280px] mx-auto mb-8 xl:w-[360px] xl:h-[360px] md:mx-0 md:mb-o md:mr-8 bg-accentMain rounded-lg flex justify-center items-center\">\n        <p>Input for photo</p>\n      </div>\n      <div className=\" flex flex-col md:w-[400px] mt-2\">\n        <div className=\"relative z-0 w-full mb-6\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n            required\n            className=\"pt-3 pb-2 pl-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n          <label\n            htmlFor=\"title\"\n            className=\"absolute duration-300 top-3 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n          >\n            Enter Recipe Title\n          </label>\n          {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">Title is required</span> */}\n        </div>\n        <div className=\"relative z-0 w-full \">\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\" \"\n            autoComplete=\"off\"\n            className=\"pt-3 pb-2 pl-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n          />\n          <label\n            htmlFor=\"description\"\n            className=\"absolute duration-300 top-3 -z-1 origin-0 text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n          >\n            Enter adout recipe\n          </label>\n          {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n          Description is required\n          </span> */}\n        </div>\n        <div className=\"flex flex-row space-x-4 my-6\">\n          <div className=\"relative z-0 w-full \">\n            <select\n              name=\"category\"\n              value={category}\n              onChange={e => setCategory(e.target.value)}\n              className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            >\n              {categories.map(({ type }) => (\n                <option\n                  key={type}\n                  value={type}\n                  className=\"bg-lime-50 text-center\"\n                >\n                  {type}\n                </option>\n              ))}\n            </select>\n            <label\n              htmlFor=\"category\"\n              className=\"absolute duration-300 top-3 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n            >\n              Category\n            </label>\n            {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n            Category has to be selected\n          </span> */}\n          </div>\n          <div className=\"relative z-0 w-full \">\n            <select\n              name=\"time\"\n              value={time}\n              onChange={e => setTime(e.target.value)}\n              className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none z-1 focus:outline-none focus:ring-0 focus:border-accentMain border-gray-200\"\n            >\n              {timeList.map(({ time }) => (\n                <option\n                  key={time}\n                  value={time}\n                  className=\"bg-lime-50 text-center\"\n                >\n                  {time}\n                </option>\n              ))}\n            </select>\n            <label\n              htmlFor=\"time\"\n              className=\"absolute duration-300 top-3 -z-1 origin-0  text-gray-500 font-main font-normal text-customXs md:text-customSm\"\n            >\n              Cooking time\n            </label>\n            {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n            Time has to be selected\n          </span> */}\n          </div>\n        </div>\n      </div>\n    </form>\n    // </div>\n  );\n};\n\n// ('use strict');\n\n// document.getElementById('button').addEventListener('click', toggleError);\n// const errMessages = document.querySelectorAll('#error');\n\n// function toggleError() {\n//   // Show error message\n//   errMessages.forEach(el => {\n//     el.classList.toggle('hidden');\n//   });\n\n//   // Highlight input and label with red\n//   const allBorders = document.querySelectorAll('.border-gray-200');\n//   const allTexts = document.querySelectorAll('.text-gray-500');\n//   allBorders.forEach(el => {\n//     el.classList.toggle('border-red-600');\n//   });\n//   allTexts.forEach(el => {\n//     el.classList.toggle('text-red-600');\n//   });\n// }\n","export const ResipeIngredientsFields = () => {\n  return (\n    <div className=\"my-8 font-main font-semibold text-secondaryText text-customBase\">\n      Ingredients\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nexport const ResipeMethodFields = () => {\n  const [method, setMethod] = useState('');\n\n  return (\n    <div className=\"w-full \">\n      <label\n        htmlFor=\"method\"\n        className=\"font-main font-semibold text-secondaryText text-customBase\"\n      >\n        Recipe Preparation\n      </label>\n      <textarea\n        name=\"method\"\n        value={method}\n        placeholder=\"Enter recipe method\"\n        onChange={e => setMethod(e.target.value)}\n        className=\"p-3 block w-full h-40 my-[18px] md:my-[32px] md:w-2/3 lg:w-1/2 rounded-lg bg-accentGray border-0 border-b-2 appearance-none  focus:outline-none focus:ring-0 focus:border-accentMain border-transparent\"\n      ></textarea>\n\n      {/* <span className=\"text-sm text-red-600 hidden\" id=\"error\">\n            Category has to be selected\n          </span> */}\n    </div>\n  );\n};\n","import { ResipeDescriptionFields } from './ResipeDescriptionFields';\nimport { ResipeIngredientsFields } from './RecipeIngredientsFields';\nimport { ResipeMethodFields } from './RecipeMethodFields';\nimport { CurveBtn } from 'components/CurveBtn/CurveBtn';\n\nexport const AddRecipeForm = () => {\n  return (\n    <div className=\"px-4 md:px-8 xl:px-24\">\n      <ResipeDescriptionFields />\n      <ResipeIngredientsFields />\n      <ResipeMethodFields />\n      <CurveBtn\n        text=\"Add\"\n        cssClass=\"addblack-btn\"\n        onClick={() => {\n          console.log(`Click add recipe`);\n        }}\n      />\n    </div>\n  );\n};\n","import { AddRecipeForm } from 'components/AddRecipe/AddRecipeForm';\nimport { MainPageTitle } from 'components/MainPageTitle/MainPageTitle';\n// import { FollowUs } from 'components/FollowUs/FollowUs';\nconst AddRecipe = () => {\n  return (\n    <>\n      <MainPageTitle\n        pageTitle=\"Add recipe\"\n        className=\"main-title mt-[50px] mb-[72px] md:mt-[72px] md:mb-[100px] xl:mt-[100px] px-4 md:px-8 xl:px-24\"\n      />\n      <AddRecipeForm />\n      {/* <FollowUs className=\"26px\" /> */}\n    </>\n  );\n};\n\nexport default AddRecipe;\n"],"names":["console","log","categories","timeList","ResipeDescriptionFields","useState","title","setTitle","description","setDescription","category","setCategory","time","setTime","id","noValidate","className","type","name","placeholder","autoComplete","required","value","onChange","e","target","htmlFor","ResipeIngredientsFields","ResipeMethodFields","method","setMethod","AddRecipeForm","CurveBtn","text","cssClass","onClick","MainPageTitle","pageTitle"],"sourceRoot":""}
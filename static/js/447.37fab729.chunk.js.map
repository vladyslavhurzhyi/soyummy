{"version":3,"file":"static/js/447.37fab729.chunk.js","mappings":"4KAAaA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,KAAlB,EACrBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,QAAQG,SAAlB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,QAAQK,KAAlB,E,SCCnBC,EAAiB,SAAAC,GAC5B,IACQC,GADQC,EAAAA,EAAAA,IAAYX,GACIS,KAAK,GAA7BC,YAGR,OAFAE,QAAQC,IAAIH,IAGV,+BACE,gBAAKI,UAAU,YAAf,UACE,iBAAKA,UAAU,8KAAf,WACE,gBAAKA,UAAU,yBAAf,0BACA,iBAAKA,UAAU,OAAf,WACE,gBAAKA,UAAU,mCAAf,qBACA,gBAAKA,UAAU,yBAAf,kCAMX,E,mBChBYC,EAAiB,SAAAN,GAC5B,IACA,GADgBE,EAAAA,EAAAA,IAAYX,GACiBS,KAAK,GAA1CO,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,KAM5B,OACE,+BACE,gBAAKJ,UAAU,uHAAf,UACE,4BACE,4BACE,SAACK,EAAA,EAAD,CACEC,UAAWJ,EACXF,UAAU,wEAEZ,cAAGA,UAAU,2CAAb,SACGG,QAGL,4BACE,SAACI,EAAA,EAAD,CACEC,KAAK,0BACLC,SAAS,yEACTC,QArBQ,WAClBZ,QAAQC,IAAI,IACb,KAqBS,iBAAKC,UAAU,mCAAf,WACE,iBACEW,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNf,UAAU,mBANZ,WAQE,eAAGgB,SAAS,sBAAZ,WACE,iBACEC,EAAE,kNACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,WAEjB,iBACEJ,EAAE,2BACFC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,cAGnB,2BACE,qBAAUC,GAAG,gBAAb,UACE,iBAAMX,MAAM,KAAKC,OAAO,KAAKE,KAAK,kBAIxC,eAAGd,UAAU,yBAAb,UAAuCI,EAAvC,sBAOb,E,wCC9BD,EA1BmB,WACjB,IAAMhB,GAAUS,EAAAA,EAAAA,IAAYX,GACtBK,GAAYM,EAAAA,EAAAA,IAAYP,GACxBG,GAAQI,EAAAA,EAAAA,IAAYL,GACpB+B,GAAWC,EAAAA,EAAAA,MAETC,GAAaC,EAAAA,EAAAA,MAAbD,SAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRJ,GAASK,EAAAA,EAAAA,GAAgBH,GAC1B,GAAE,CAACF,EAAUE,KAGZ,6BACE,SAACI,EAAA,EAAD,IACCzC,EAAQ0C,OACP,iCACE,SAAC7B,EAAD,KACA,SAACP,EAAD,OAGHH,IAAcE,IAAS,SAACsC,EAAA,EAAD,MAG7B,C","sources":["redux/recipes/recipesSelectors.js","components/RecipeById/IngredientList.jsx","components/RecipeById/RecipePageHero.jsx","pages/RecipePage.jsx"],"sourcesContent":["export const selectRecipes = state => state.recipes.items;\nexport const selectIsLoading = state => state.recipes.isLoading;\nexport const selectError = state => state.recipes.error;\n","import { useSelector } from 'react-redux';\nimport { selectRecipes } from 'redux/recipes/recipesSelectors';\n\nexport const IngredientList = data => {\n  const recipes = useSelector(selectRecipes);\n  const { ingredients } = recipes.data[0];\n  console.log(ingredients);\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"flex justify-between items-center text-center w-full h-[42px] bg-accentMain dark: rounded-lg font-semibold text-whiteText px-3.5 drop-shadow-[0px_4px_4px_rgba(0,0,0,0.25)]\">\n          <div className=\"text-customRecipesTime\">Ingredients</div>\n          <div className=\"flex\">\n            <div className=\"text-customRecipesTime mr-[18px]\">Number</div>\n            <div className=\"text-customRecipesTime\">Add to list</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { CurveBtn } from 'components/CurveBtn/CurveBtn';\nimport { MainPageTitle } from 'components/MainPageTitle/MainPageTitle';\nimport { useSelector } from 'react-redux';\nimport { selectRecipes } from 'redux/recipes/recipesSelectors';\n\nexport const RecipePageHero = data => {\n  const recipes = useSelector(selectRecipes);\n  const { title, description, time } = recipes.data[0];\n\n  const handleClick = () => {\n    console.log(123);\n  };\n\n  return (\n    <>\n      <div className=\"flex flex-col font-main bg-recipePage bg-cover bg-center bg-no-repeat w-full h-[455px] md:h-[495px] text-center mb-8\">\n        <div>\n          <div>\n            <MainPageTitle\n              pageTitle={title}\n              className=\"main-title-accent mb-[18px] md:mb-[100px] md:px-8 xl:px-24 mx-auto\"\n            />\n            <p className=\"block text-xs mx-auto max-w-[285px] mb-6\">\n              {description}\n            </p>\n          </div>\n          <div>\n            <CurveBtn\n              text=\"Add to favorite recipes\"\n              cssClass=\"othercateg-btn text-customRecipesTime px-[16.9px] py-[8.9px] mb-[42px]\"\n              onClick={handleClick}\n            />\n            <div className=\"flex justify-center items-center\">\n              <svg\n                width=\"14\"\n                height=\"14\"\n                viewBox=\"0 0 14 14\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"mr-1 w-3.5 h-3.5\"\n              >\n                <g clipPath=\"url(#clip0_264_756)\">\n                  <path\n                    d=\"M6.99935 12.8334C10.221 12.8334 12.8327 10.2217 12.8327 7.00002C12.8327 3.77836 10.221 1.16669 6.99935 1.16669C3.77769 1.16669 1.16602 3.77836 1.16602 7.00002C1.16602 10.2217 3.77769 12.8334 6.99935 12.8334Z\"\n                    stroke=\"#23262A\"\n                    strokeWidth=\"1.3\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                  <path\n                    d=\"M7 3.5V7L9.33333 8.16667\"\n                    stroke=\"#23262A\"\n                    strokeWidth=\"1.3\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                </g>\n                <defs>\n                  <clipPath id=\"clip0_264_756\">\n                    <rect width=\"14\" height=\"14\" fill=\"white\" />\n                  </clipPath>\n                </defs>\n              </svg>\n              <p className=\"text-customRecipesTime\">{time} min</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { IngredientList } from 'components/RecipeById/IngredientList';\nimport { RecipePageHero } from 'components/RecipeById/RecipePageHero';\nimport { ToggleButton } from 'components/ToggleButton/ToggleButton';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { fetchRecipeById } from 'redux/recipes/recipesOperations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectRecipes,\n} from 'redux/recipes/recipesSelectors';\n\nconst RecipePage = () => {\n  const recipes = useSelector(selectRecipes);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const { recipeId } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchRecipeById(recipeId));\n  }, [dispatch, recipeId]);\n\n  return (\n    <main>\n      <ToggleButton />\n      {recipes.code && (\n        <>\n          <RecipePageHero />\n          <IngredientList />\n        </>\n      )}\n      {isLoading && !error && <Loader />}\n    </main>\n  );\n};\n\nexport default RecipePage;\n"],"names":["selectRecipes","state","recipes","items","selectIsLoading","isLoading","selectError","error","IngredientList","data","ingredients","useSelector","console","log","className","RecipePageHero","title","description","time","MainPageTitle","pageTitle","CurveBtn","text","cssClass","onClick","width","height","viewBox","fill","xmlns","clipPath","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","id","dispatch","useDispatch","recipeId","useParams","useEffect","fetchRecipeById","ToggleButton","code","Loader"],"sourceRoot":""}
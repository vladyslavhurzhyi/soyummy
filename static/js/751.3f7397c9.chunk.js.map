{"version":3,"file":"static/js/751.3f7397c9.chunk.js","mappings":"qOAoLA,EA3KqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,EAClBC,SAAU,SAAAC,GACRX,GAASY,EAAAA,EAAAA,IAAOD,IAChBT,EAAOW,WACR,IAGH,OACE,qBAASC,UAAU,+BAAnB,WACE,gBAAKA,UAAU,YAAf,UACE,SAAC,IAAD,OAEF,4BACE,kBAAMA,UAAU,wBAAwBJ,SAAUR,EAAOa,aAAzD,WACE,eAAID,UAAU,gDAAd,uBAIA,iBAAKA,UAAU,mCAAf,WACE,4BACE,kBAAOA,UAAU,aAAjB,UACE,gBACEE,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRC,YAAY,MACZC,OAAO,QACPN,UAAU,WANZ,UAQE,iBACEO,cAAc,QACdC,eAAe,QACfC,EAAE,0JAIR,kBACEC,GAAG,OACHnB,KAAK,OACLoB,KAAK,OACLC,aAAa,OACbC,UAAQ,EACRb,UAAS,qBACPZ,EAAO0B,OAAOvB,MAAQH,EAAO2B,QAAQxB,KACjC,iBACA,mBAENyB,YAAY,OACZC,SAAU7B,EAAO8B,aACjBC,OAAQ/B,EAAOgC,WACfC,MAAOjC,EAAOS,OAAON,OAEtBH,EAAO0B,OAAOvB,MAAQH,EAAO2B,QAAQxB,OACpC,cAAGS,UAAU,uCAAb,SACGZ,EAAO0B,OAAOvB,WAIrB,0BACE,mBAAOS,UAAU,YAAjB,WACE,gBACEE,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRC,YAAY,MACZC,OAAO,QACPN,UAAU,WANZ,UAQE,iBACEO,cAAc,QACdC,eAAe,QACfC,EAAE,4WAIN,kBACEC,GAAG,QACHnB,KAAK,QACLoB,KAAK,QACLC,aAAa,QACbC,UAAQ,EACRb,UAAS,qBACPZ,EAAO0B,OAAOtB,OAASJ,EAAO2B,QAAQvB,MAClC,iBACA,mBAENwB,YAAY,QACZC,SAAU7B,EAAO8B,aACjBC,OAAQ/B,EAAOgC,WACfC,MAAOjC,EAAOS,OAAOL,QAEtBJ,EAAO0B,OAAOtB,OAASJ,EAAO2B,QAAQvB,QACrC,cAAGQ,UAAU,uCAAb,SACGZ,EAAO0B,OAAOtB,cAKvB,0BACE,mBAAOQ,UAAU,YAAjB,WACE,gBACEE,MAAM,6BACNE,QAAQ,YACRD,KAAK,QACLH,UAAU,WAJZ,UAME,iBACEsB,SAAS,UACTb,EAAE,+IACFc,SAAS,eAGb,kBACEb,GAAG,WACHnB,KAAK,WACLoB,KAAK,WACLC,aAAa,mBACbC,UAAQ,EACRb,UAAS,WACPZ,EAAO0B,OAAOrB,UAAYL,EAAO2B,QAAQtB,SACrC,iBACA,kBAHG,gBAKTuB,YAAY,WACZC,SAAU7B,EAAO8B,aACjBC,OAAQ/B,EAAOgC,WACfC,MAAOjC,EAAOS,OAAOJ,WAEtBL,EAAO0B,OAAOrB,UAAYL,EAAO2B,QAAQtB,WACxC,cAAGO,UAAU,uCAAb,SACGZ,EAAO0B,OAAOrB,oBAOzB,0BACE,mBACEkB,KAAK,SACLX,UAAU,sOAFZ,yBAOF,gBAAKA,UAAU,sBAAf,UACE,SAACwB,EAAA,EAAD,UAGJ,gBAAKxB,UAAU,sBAAf,UACE,SAAC,KAAD,CACEA,UAAU,uFACVyB,GAAG,UAFL,4BAUT,ECzKD,EAPiB,WACf,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/auth/authOperations';\nimport { NavLink } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { registerValidationSchema } from 'utils/authValidationSchema/authValidationSchema';\nimport { GoogleLogIn } from 'components/GoogleLogIn';\n\nimport { ReactComponent as Svg } from '../../images/svg/OrderFoodPana.svg';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: registerValidationSchema,\n    onSubmit: values => {\n      dispatch(signUp(values));\n      formik.resetForm();\n    },\n  });\n\n  return (\n    <section className=\"formWrapSection xl:h-[100vh]\">\n      <div className=\" svgWrap \">\n        <Svg />\n      </div>\n      <div>\n        <form className=\"foraWrap md:w-[500px]\" onSubmit={formik.handleSubmit}>\n          <h2 className=\" pl-2 text-3xl font-extrabold text-whiteText \">\n            Register\n          </h2>\n          {/* <input type=\"hidden\" name=\"remember\" value=\"true\" /> */}\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label className=\" relative \">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth=\"1.5\"\n                  stroke=\"white\"\n                  className=\"inputSVG\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M15.75 6a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0zM4.501 20.118a7.5 7.5 0 0114.998 0A17.933 17.933 0 0112 21.75c-2.676 0-5.216-.584-7.499-1.632z\"\n                  />\n                </svg>\n              </label>\n              <input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                autoComplete=\"name\"\n                required\n                className={`inputField ${\n                  formik.errors.name && formik.touched.name\n                    ? 'border-red-600'\n                    : 'border-gray-300'\n                }`}\n                placeholder=\"Name\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.name}\n              />\n              {formik.errors.name && formik.touched.name && (\n                <p className=\"absolute text-red-500 text-xs italic\">\n                  {formik.errors.name}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className=\" relative\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth=\"1.5\"\n                  stroke=\"white\"\n                  className=\"inputSVG\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M21.75 9v.906a2.25 2.25 0 01-1.183 1.981l-6.478 3.488M2.25 9v.906a2.25 2.25 0 001.183 1.981l6.478 3.488m8.839 2.51l-4.66-2.51m0 0l-1.023-.55a2.25 2.25 0 00-2.134 0l-1.022.55m0 0l-4.661 2.51m16.5 1.615a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V8.844a2.25 2.25 0 011.183-1.98l7.5-4.04a2.25 2.25 0 012.134 0l7.5 4.04a2.25 2.25 0 011.183 1.98V19.5z\"\n                  />\n                </svg>\n\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  className={`inputField ${\n                    formik.errors.email && formik.touched.email\n                      ? 'border-red-600'\n                      : 'border-gray-300'\n                  }`}\n                  placeholder=\"Email\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.email}\n                />\n                {formik.errors.email && formik.touched.email && (\n                  <p className=\"absolute text-red-500 text-xs italic\">\n                    {formik.errors.email}\n                  </p>\n                )}\n              </label>\n            </div>\n            <div>\n              <label className=\" relative\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"white\"\n                  className=\"inputSVG\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10 1a4.5 4.5 0 00-4.5 4.5V9H5a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-.5V5.5A4.5 4.5 0 0010 1zm3 8V5.5a3 3 0 10-6 0V9h6z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  className={` ${\n                    formik.errors.password && formik.touched.password\n                      ? 'border-red-600'\n                      : 'border-gray-300'\n                  } inputField `}\n                  placeholder=\"Password\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.password}\n                />\n                {formik.errors.password && formik.touched.password && (\n                  <p className=\"absolute text-red-500 text-xs italic\">\n                    {formik.errors.password}\n                  </p>\n                )}\n              </label>\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-accentMain hover:bg-accentDark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Register\n            </button>\n          </div>\n          <div className=\"flex justify-center\">\n            <GoogleLogIn />\n          </div>\n        </form>\n        <div className=\"flex justify-center\">\n          <NavLink\n            className=\" text-center mt-4 text-white hover:text-accentMain self-center underline text-base  \"\n            to=\"/signin\"\n          >\n            Sign in\n          </NavLink>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\nexport default Register;\n"],"names":["dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","validationSchema","registerValidationSchema","onSubmit","values","signUp","resetForm","className","handleSubmit","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","id","type","autoComplete","required","errors","touched","placeholder","onChange","handleChange","onBlur","handleBlur","value","fillRule","clipRule","GoogleLogIn","to"],"sourceRoot":""}